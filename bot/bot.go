package bot

import (
	"cs2_telegram_bot/database"
	"log"
	"os"
	"time"

	teleg "gopkg.in/telebot.v3"
)

var Bot *teleg.Bot

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∏ –∑–∞–ø—É—Å–∫ –±–æ—Ç–∞
func StartBot() {
	settings := teleg.Settings{ // –°—Ç—Ä—É–∫—Ç—É—Ä–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –±–æ—Ç–∞
		Token:  os.Getenv("TELEGRAM_TOKEN"),
		Poller: &teleg.LongPoller{Timeout: 10 * time.Second}, // –û–±—è–∑–∞—Ç–µ–ª—å–Ω–æ–µ –ø–æ–ª–µ –ü–æ–ª–ª–µ—Ä–∞, —è –≤—ã–±—Ä–∞–ª –ª–æ–Ω–≥ –ø–æ–ª–ª–∏–Ω–≥ —Å —Ç–∞–π–º–∞—É—Ç–æ–º –≤ 10 —Å–µ–∫
	}

	var err error
	Bot, err = teleg.NewBot(settings)
	if err != nil {
		log.Fatal(err)
	}

	Bot.Handle("/start", handleStart)
	Bot.Handle("/register", handleRegister)

	Bot.Start()

}

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã start
// teleg.Context - —ç—Ç–æ –æ–±—ä–µ–∫—Ç –∫–æ—Ç–æ—Ä—ã–π —Å–æ–¥–µ—Ä–∂–∏—Ç –≤—Å—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å–æ–æ–±—â–µ–Ω–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
func handleStart(context teleg.Context) error {
	return context.Send("–û–ª–∞ –ê–º–∏–≥–æ! üëã –Ø –±–æ—Ç –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –∏–≥—Ä–æ–∫–æ–≤ CS2. –ò—Å–ø–æ–ª—å–∑—É–π /register —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å.")
}

func handleRegister(context teleg.Context) error {
	userID := context.Sender().ID

	// –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –±–∞–∑–µ
	found, err := database.UserExists(userID)
	if err != nil {
		log.Fatal(err)
		return context.Send("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è. Negativ!")
	}

	if found {
		return context.Send("–í—ã —É–∂–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã. ‚úÖ OK Let's Go")
	}

	err = database.AddUser(userID, "1234567", "Test Info")
	if err != nil {
		return context.Send("–û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è. Negativ!")
	}

	return context.Send("–í—ã —É—Å–ø–µ—à–Ω–æ –∑–∞—Ä–µ–≥–µ—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã –≤ —Å–∏—Å—Ç–µ–º–µ! Easy peasy lemon squeezy!")

}
